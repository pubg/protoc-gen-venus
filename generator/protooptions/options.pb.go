// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: options.proto

package protooptions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_unspecified State = 0
	State_primary     State = 1
	State_info        State = 2
	State_success     State = 3
	State_warn        State = 4
	State_idle        State = 5
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "unspecified",
		1: "primary",
		2: "info",
		3: "success",
		4: "warn",
		5: "idle",
	}
	State_value = map[string]int32{
		"unspecified": 0,
		"primary":     1,
		"info":        2,
		"success":     3,
		"warn":        4,
		"idle":        5,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_options_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_options_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{0}
}

type ComponentType int32

const (
	ComponentType_Inference       ComponentType = 0
	ComponentType_Input           ComponentType = 1
	ComponentType_MultiString     ComponentType = 2
	ComponentType_Select          ComponentType = 3
	ComponentType_Checkbox        ComponentType = 4
	ComponentType_CheckboxSet     ComponentType = 5
	ComponentType_Switch          ComponentType = 6
	ComponentType_DateRangePicker ComponentType = 7
	ComponentType_DateTimePicker  ComponentType = 8
	ComponentType_TextArea        ComponentType = 9
	ComponentType_JsonEditor      ComponentType = 10
	ComponentType_Radio           ComponentType = 11
	ComponentType_RadioSet        ComponentType = 12
)

// Enum value maps for ComponentType.
var (
	ComponentType_name = map[int32]string{
		0:  "Inference",
		1:  "Input",
		2:  "MultiString",
		3:  "Select",
		4:  "Checkbox",
		5:  "CheckboxSet",
		6:  "Switch",
		7:  "DateRangePicker",
		8:  "DateTimePicker",
		9:  "TextArea",
		10: "JsonEditor",
		11: "Radio",
		12: "RadioSet",
	}
	ComponentType_value = map[string]int32{
		"Inference":       0,
		"Input":           1,
		"MultiString":     2,
		"Select":          3,
		"Checkbox":        4,
		"CheckboxSet":     5,
		"Switch":          6,
		"DateRangePicker": 7,
		"DateTimePicker":  8,
		"TextArea":        9,
		"JsonEditor":      10,
		"Radio":           11,
		"RadioSet":        12,
	}
)

func (x ComponentType) Enum() *ComponentType {
	p := new(ComponentType)
	*p = x
	return p
}

func (x ComponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_options_proto_enumTypes[1].Descriptor()
}

func (ComponentType) Type() protoreflect.EnumType {
	return &file_options_proto_enumTypes[1]
}

func (x ComponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentType.Descriptor instead.
func (ComponentType) EnumDescriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{1}
}

type InputOptions_Type int32

const (
	InputOptions_inference InputOptions_Type = 0
	InputOptions_text      InputOptions_Type = 1
	InputOptions_number    InputOptions_Type = 2
)

// Enum value maps for InputOptions_Type.
var (
	InputOptions_Type_name = map[int32]string{
		0: "inference",
		1: "text",
		2: "number",
	}
	InputOptions_Type_value = map[string]int32{
		"inference": 0,
		"text":      1,
		"number":    2,
	}
)

func (x InputOptions_Type) Enum() *InputOptions_Type {
	p := new(InputOptions_Type)
	*p = x
	return p
}

func (x InputOptions_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputOptions_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_options_proto_enumTypes[2].Descriptor()
}

func (InputOptions_Type) Type() protoreflect.EnumType {
	return &file_options_proto_enumTypes[2]
}

func (x InputOptions_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputOptions_Type.Descriptor instead.
func (InputOptions_Type) EnumDescriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{4, 0}
}

// Not extendable, just define structure
type PluginOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExposeAll        *bool   `protobuf:"varint,1,opt,name=expose_all,json=exposeAll,proto3,oneof" json:"expose_all,omitempty"`
	OutputFileSuffix *string `protobuf:"bytes,2,opt,name=output_file_suffix,json=outputFileSuffix,proto3,oneof" json:"output_file_suffix,omitempty"`
	PrettyOutput     *bool   `protobuf:"varint,3,opt,name=pretty_output,json=prettyOutput,proto3,oneof" json:"pretty_output,omitempty"`
}

func (x *PluginOptions) Reset() {
	*x = PluginOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginOptions) ProtoMessage() {}

func (x *PluginOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginOptions.ProtoReflect.Descriptor instead.
func (*PluginOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{0}
}

func (x *PluginOptions) GetExposeAll() bool {
	if x != nil && x.ExposeAll != nil {
		return *x.ExposeAll
	}
	return false
}

func (x *PluginOptions) GetOutputFileSuffix() string {
	if x != nil && x.OutputFileSuffix != nil {
		return *x.OutputFileSuffix
	}
	return ""
}

func (x *PluginOptions) GetPrettyOutput() bool {
	if x != nil && x.PrettyOutput != nil {
		return *x.PrettyOutput
	}
	return false
}

type FileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expose            *bool  `protobuf:"varint,1,opt,name=expose,proto3,oneof" json:"expose,omitempty"`
	EntrypointMessage string `protobuf:"bytes,2,opt,name=entrypointMessage,proto3" json:"entrypointMessage,omitempty"`
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{1}
}

func (x *FileOptions) GetExpose() bool {
	if x != nil && x.Expose != nil {
		return *x.Expose
	}
	return false
}

func (x *FileOptions) GetEntrypointMessage() string {
	if x != nil {
		return x.EntrypointMessage
	}
	return ""
}

type MessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expose *bool `protobuf:"varint,1,opt,name=expose,proto3,oneof" json:"expose,omitempty"`
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{2}
}

func (x *MessageOptions) GetExpose() bool {
	if x != nil && x.Expose != nil {
		return *x.Expose
	}
	return false
}

type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expose   *bool  `protobuf:"varint,1,opt,name=expose,proto3,oneof" json:"expose,omitempty"`
	Property string `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
	// Types that are assignable to Width:
	//	*FieldOptions_Rem
	//	*FieldOptions_Lg
	Width       isFieldOptions_Width `protobuf_oneof:"width"`
	Label       string               `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	Placeholder string               `protobuf:"bytes,6,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	State       State                `protobuf:"varint,7,opt,name=state,proto3,enum=protoc.gen.vlossom.State" json:"state,omitempty"`
	Component   ComponentType        `protobuf:"varint,8,opt,name=component,proto3,enum=protoc.gen.vlossom.ComponentType" json:"component,omitempty"`
	// Types that are assignable to Options:
	//	*FieldOptions_Input
	//	*FieldOptions_MultiString
	//	*FieldOptions_Select
	//	*FieldOptions_CheckboxSet
	//	*FieldOptions_TextArea
	//	*FieldOptions_JsonEditor
	//	*FieldOptions_Radio
	//	*FieldOptions_RadioSet
	Options isFieldOptions_Options `protobuf_oneof:"Options"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{3}
}

func (x *FieldOptions) GetExpose() bool {
	if x != nil && x.Expose != nil {
		return *x.Expose
	}
	return false
}

func (x *FieldOptions) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (m *FieldOptions) GetWidth() isFieldOptions_Width {
	if m != nil {
		return m.Width
	}
	return nil
}

func (x *FieldOptions) GetRem() int32 {
	if x, ok := x.GetWidth().(*FieldOptions_Rem); ok {
		return x.Rem
	}
	return 0
}

func (x *FieldOptions) GetLg() int32 {
	if x, ok := x.GetWidth().(*FieldOptions_Lg); ok {
		return x.Lg
	}
	return 0
}

func (x *FieldOptions) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *FieldOptions) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *FieldOptions) GetState() State {
	if x != nil {
		return x.State
	}
	return State_unspecified
}

func (x *FieldOptions) GetComponent() ComponentType {
	if x != nil {
		return x.Component
	}
	return ComponentType_Inference
}

func (m *FieldOptions) GetOptions() isFieldOptions_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (x *FieldOptions) GetInput() *InputOptions {
	if x, ok := x.GetOptions().(*FieldOptions_Input); ok {
		return x.Input
	}
	return nil
}

func (x *FieldOptions) GetMultiString() *MultiStringOptions {
	if x, ok := x.GetOptions().(*FieldOptions_MultiString); ok {
		return x.MultiString
	}
	return nil
}

func (x *FieldOptions) GetSelect() *SelectOptions {
	if x, ok := x.GetOptions().(*FieldOptions_Select); ok {
		return x.Select
	}
	return nil
}

func (x *FieldOptions) GetCheckboxSet() *CheckboxSetOptions {
	if x, ok := x.GetOptions().(*FieldOptions_CheckboxSet); ok {
		return x.CheckboxSet
	}
	return nil
}

func (x *FieldOptions) GetTextArea() *TextAreaOptions {
	if x, ok := x.GetOptions().(*FieldOptions_TextArea); ok {
		return x.TextArea
	}
	return nil
}

func (x *FieldOptions) GetJsonEditor() *JsonEditorOptions {
	if x, ok := x.GetOptions().(*FieldOptions_JsonEditor); ok {
		return x.JsonEditor
	}
	return nil
}

func (x *FieldOptions) GetRadio() *RadioOptions {
	if x, ok := x.GetOptions().(*FieldOptions_Radio); ok {
		return x.Radio
	}
	return nil
}

func (x *FieldOptions) GetRadioSet() *RadioSetOptions {
	if x, ok := x.GetOptions().(*FieldOptions_RadioSet); ok {
		return x.RadioSet
	}
	return nil
}

type isFieldOptions_Width interface {
	isFieldOptions_Width()
}

type FieldOptions_Rem struct {
	Rem int32 `protobuf:"varint,3,opt,name=rem,proto3,oneof"`
}

type FieldOptions_Lg struct {
	Lg int32 `protobuf:"varint,4,opt,name=lg,proto3,oneof"`
}

func (*FieldOptions_Rem) isFieldOptions_Width() {}

func (*FieldOptions_Lg) isFieldOptions_Width() {}

type isFieldOptions_Options interface {
	isFieldOptions_Options()
}

type FieldOptions_Input struct {
	Input *InputOptions `protobuf:"bytes,21,opt,name=input,proto3,oneof"`
}

type FieldOptions_MultiString struct {
	MultiString *MultiStringOptions `protobuf:"bytes,22,opt,name=multi_string,json=multiString,proto3,oneof"`
}

type FieldOptions_Select struct {
	Select *SelectOptions `protobuf:"bytes,23,opt,name=select,proto3,oneof"`
}

type FieldOptions_CheckboxSet struct {
	CheckboxSet *CheckboxSetOptions `protobuf:"bytes,24,opt,name=checkboxSet,proto3,oneof"`
}

type FieldOptions_TextArea struct {
	TextArea *TextAreaOptions `protobuf:"bytes,25,opt,name=text_area,json=textArea,proto3,oneof"`
}

type FieldOptions_JsonEditor struct {
	JsonEditor *JsonEditorOptions `protobuf:"bytes,26,opt,name=json_editor,json=jsonEditor,proto3,oneof"`
}

type FieldOptions_Radio struct {
	Radio *RadioOptions `protobuf:"bytes,27,opt,name=radio,proto3,oneof"`
}

type FieldOptions_RadioSet struct {
	RadioSet *RadioSetOptions `protobuf:"bytes,28,opt,name=radio_set,json=radioSet,proto3,oneof"`
}

func (*FieldOptions_Input) isFieldOptions_Options() {}

func (*FieldOptions_MultiString) isFieldOptions_Options() {}

func (*FieldOptions_Select) isFieldOptions_Options() {}

func (*FieldOptions_CheckboxSet) isFieldOptions_Options() {}

func (*FieldOptions_TextArea) isFieldOptions_Options() {}

func (*FieldOptions_JsonEditor) isFieldOptions_Options() {}

func (*FieldOptions_Radio) isFieldOptions_Options() {}

func (*FieldOptions_RadioSet) isFieldOptions_Options() {}

type InputOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type InputOptions_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protoc.gen.vlossom.InputOptions_Type" json:"type,omitempty"`
	Min  *int32            `protobuf:"varint,2,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max  *int32            `protobuf:"varint,3,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *InputOptions) Reset() {
	*x = InputOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputOptions) ProtoMessage() {}

func (x *InputOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputOptions.ProtoReflect.Descriptor instead.
func (*InputOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{4}
}

func (x *InputOptions) GetType() InputOptions_Type {
	if x != nil {
		return x.Type
	}
	return InputOptions_inference
}

func (x *InputOptions) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *InputOptions) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type MultiStringOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delimeter string `protobuf:"bytes,1,opt,name=delimeter,proto3" json:"delimeter,omitempty"`
	Max       *int32 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
	NoChips   bool   `protobuf:"varint,3,opt,name=noChips,proto3" json:"noChips,omitempty"`
	Copy      bool   `protobuf:"varint,4,opt,name=copy,proto3" json:"copy,omitempty"`
}

func (x *MultiStringOptions) Reset() {
	*x = MultiStringOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiStringOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiStringOptions) ProtoMessage() {}

func (x *MultiStringOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiStringOptions.ProtoReflect.Descriptor instead.
func (*MultiStringOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{5}
}

func (x *MultiStringOptions) GetDelimeter() string {
	if x != nil {
		return x.Delimeter
	}
	return ""
}

func (x *MultiStringOptions) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *MultiStringOptions) GetNoChips() bool {
	if x != nil {
		return x.NoChips
	}
	return false
}

func (x *MultiStringOptions) GetCopy() bool {
	if x != nil {
		return x.Copy
	}
	return false
}

type SelectOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options       *VlossomOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Autocomplete  bool            `protobuf:"varint,2,opt,name=autocomplete,proto3" json:"autocomplete,omitempty"`
	Multiple      bool            `protobuf:"varint,3,opt,name=multiple,proto3" json:"multiple,omitempty"`
	SelectAll     bool            `protobuf:"varint,4,opt,name=select_all,json=select-all,proto3" json:"select_all,omitempty"`
	CollapseChips bool            `protobuf:"varint,5,opt,name=collapse_chips,json=collapse-chips,proto3" json:"collapse_chips,omitempty"`
	ClosableChips bool            `protobuf:"varint,6,opt,name=closable_chips,json=closable-chips,proto3" json:"closable_chips,omitempty"`
	InfiniteLoad  *int32          `protobuf:"varint,7,opt,name=infinite_load,json=infinite-load,proto3,oneof" json:"infinite_load,omitempty"`
}

func (x *SelectOptions) Reset() {
	*x = SelectOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectOptions) ProtoMessage() {}

func (x *SelectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectOptions.ProtoReflect.Descriptor instead.
func (*SelectOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{6}
}

func (x *SelectOptions) GetOptions() *VlossomOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SelectOptions) GetAutocomplete() bool {
	if x != nil {
		return x.Autocomplete
	}
	return false
}

func (x *SelectOptions) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

func (x *SelectOptions) GetSelectAll() bool {
	if x != nil {
		return x.SelectAll
	}
	return false
}

func (x *SelectOptions) GetCollapseChips() bool {
	if x != nil {
		return x.CollapseChips
	}
	return false
}

func (x *SelectOptions) GetClosableChips() bool {
	if x != nil {
		return x.ClosableChips
	}
	return false
}

func (x *SelectOptions) GetInfiniteLoad() int32 {
	if x != nil && x.InfiniteLoad != nil {
		return *x.InfiniteLoad
	}
	return 0
}

type CheckboxSetOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *VlossomOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Column  bool            `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *CheckboxSetOptions) Reset() {
	*x = CheckboxSetOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckboxSetOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckboxSetOptions) ProtoMessage() {}

func (x *CheckboxSetOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckboxSetOptions.ProtoReflect.Descriptor instead.
func (*CheckboxSetOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{7}
}

func (x *CheckboxSetOptions) GetOptions() *VlossomOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CheckboxSetOptions) GetColumn() bool {
	if x != nil {
		return x.Column
	}
	return false
}

type TextAreaOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *int32 `protobuf:"varint,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max *int32 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *TextAreaOptions) Reset() {
	*x = TextAreaOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextAreaOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextAreaOptions) ProtoMessage() {}

func (x *TextAreaOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextAreaOptions.ProtoReflect.Descriptor instead.
func (*TextAreaOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{8}
}

func (x *TextAreaOptions) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *TextAreaOptions) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type JsonEditorOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height *int32 `protobuf:"varint,1,opt,name=height,proto3,oneof" json:"height,omitempty"`
}

func (x *JsonEditorOptions) Reset() {
	*x = JsonEditorOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonEditorOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonEditorOptions) ProtoMessage() {}

func (x *JsonEditorOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonEditorOptions.ProtoReflect.Descriptor instead.
func (*JsonEditorOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{9}
}

func (x *JsonEditorOptions) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type RadioOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RadioLabel string `protobuf:"bytes,1,opt,name=radio_label,json=radioLabel,proto3" json:"radio_label,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RadioOptions) Reset() {
	*x = RadioOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioOptions) ProtoMessage() {}

func (x *RadioOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioOptions.ProtoReflect.Descriptor instead.
func (*RadioOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{10}
}

func (x *RadioOptions) GetRadioLabel() string {
	if x != nil {
		return x.RadioLabel
	}
	return ""
}

func (x *RadioOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RadioSetOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *VlossomOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Column  bool            `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *RadioSetOptions) Reset() {
	*x = RadioSetOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioSetOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioSetOptions) ProtoMessage() {}

func (x *RadioSetOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioSetOptions.ProtoReflect.Descriptor instead.
func (*RadioSetOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{11}
}

func (x *RadioSetOptions) GetOptions() *VlossomOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *RadioSetOptions) GetColumn() bool {
	if x != nil {
		return x.Column
	}
	return false
}

type VlossomOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleOptions  []string                        `protobuf:"bytes,1,rep,name=simple_options,json=options,proto3" json:"simple_options,omitempty"`
	LabeledOptions []*VlossomOptions_LabeledOption `protobuf:"bytes,2,rep,name=labeled_options,json=options,proto3" json:"labeled_options,omitempty"`
	OptionLabel    *string                         `protobuf:"bytes,3,opt,name=option_label,json=option-label,proto3,oneof" json:"option_label,omitempty"`
	OptionValue    *string                         `protobuf:"bytes,4,opt,name=option_value,json=option-value,proto3,oneof" json:"option_value,omitempty"`
}

func (x *VlossomOptions) Reset() {
	*x = VlossomOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VlossomOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlossomOptions) ProtoMessage() {}

func (x *VlossomOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlossomOptions.ProtoReflect.Descriptor instead.
func (*VlossomOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{12}
}

func (x *VlossomOptions) GetSimpleOptions() []string {
	if x != nil {
		return x.SimpleOptions
	}
	return nil
}

func (x *VlossomOptions) GetLabeledOptions() []*VlossomOptions_LabeledOption {
	if x != nil {
		return x.LabeledOptions
	}
	return nil
}

func (x *VlossomOptions) GetOptionLabel() string {
	if x != nil && x.OptionLabel != nil {
		return *x.OptionLabel
	}
	return ""
}

func (x *VlossomOptions) GetOptionValue() string {
	if x != nil && x.OptionValue != nil {
		return *x.OptionValue
	}
	return ""
}

type EnumOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnumOptions) Reset() {
	*x = EnumOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOptions) ProtoMessage() {}

func (x *EnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOptions.ProtoReflect.Descriptor instead.
func (*EnumOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{13}
}

type EnumValueOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*EnumValueOptions_String_
	//	*EnumValueOptions_Integer
	//	*EnumValueOptions_Float
	Value isEnumValueOptions_Value `protobuf_oneof:"Value"`
}

func (x *EnumValueOptions) Reset() {
	*x = EnumValueOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueOptions) ProtoMessage() {}

func (x *EnumValueOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueOptions.ProtoReflect.Descriptor instead.
func (*EnumValueOptions) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{14}
}

func (m *EnumValueOptions) GetValue() isEnumValueOptions_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *EnumValueOptions) GetString_() string {
	if x, ok := x.GetValue().(*EnumValueOptions_String_); ok {
		return x.String_
	}
	return ""
}

func (x *EnumValueOptions) GetInteger() int64 {
	if x, ok := x.GetValue().(*EnumValueOptions_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *EnumValueOptions) GetFloat() float64 {
	if x, ok := x.GetValue().(*EnumValueOptions_Float); ok {
		return x.Float
	}
	return 0
}

type isEnumValueOptions_Value interface {
	isEnumValueOptions_Value()
}

type EnumValueOptions_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=string,proto3,oneof"`
}

type EnumValueOptions_Integer struct {
	Integer int64 `protobuf:"varint,2,opt,name=integer,proto3,oneof"`
}

type EnumValueOptions_Float struct {
	Float float64 `protobuf:"fixed64,3,opt,name=float,proto3,oneof"`
}

func (*EnumValueOptions_String_) isEnumValueOptions_Value() {}

func (*EnumValueOptions_Integer) isEnumValueOptions_Value() {}

func (*EnumValueOptions_Float) isEnumValueOptions_Value() {}

type VlossomOptions_LabeledOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// Types that are assignable to Value:
	//	*VlossomOptions_LabeledOption_String_
	//	*VlossomOptions_LabeledOption_Integer
	//	*VlossomOptions_LabeledOption_Float
	Value isVlossomOptions_LabeledOption_Value `protobuf_oneof:"Value"`
}

func (x *VlossomOptions_LabeledOption) Reset() {
	*x = VlossomOptions_LabeledOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VlossomOptions_LabeledOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlossomOptions_LabeledOption) ProtoMessage() {}

func (x *VlossomOptions_LabeledOption) ProtoReflect() protoreflect.Message {
	mi := &file_options_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlossomOptions_LabeledOption.ProtoReflect.Descriptor instead.
func (*VlossomOptions_LabeledOption) Descriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{12, 0}
}

func (x *VlossomOptions_LabeledOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (m *VlossomOptions_LabeledOption) GetValue() isVlossomOptions_LabeledOption_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *VlossomOptions_LabeledOption) GetString_() string {
	if x, ok := x.GetValue().(*VlossomOptions_LabeledOption_String_); ok {
		return x.String_
	}
	return ""
}

func (x *VlossomOptions_LabeledOption) GetInteger() int64 {
	if x, ok := x.GetValue().(*VlossomOptions_LabeledOption_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *VlossomOptions_LabeledOption) GetFloat() float64 {
	if x, ok := x.GetValue().(*VlossomOptions_LabeledOption_Float); ok {
		return x.Float
	}
	return 0
}

type isVlossomOptions_LabeledOption_Value interface {
	isVlossomOptions_LabeledOption_Value()
}

type VlossomOptions_LabeledOption_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type VlossomOptions_LabeledOption_Integer struct {
	Integer int64 `protobuf:"varint,3,opt,name=integer,proto3,oneof"`
}

type VlossomOptions_LabeledOption_Float struct {
	Float float64 `protobuf:"fixed64,4,opt,name=float,proto3,oneof"`
}

func (*VlossomOptions_LabeledOption_String_) isVlossomOptions_LabeledOption_Value() {}

func (*VlossomOptions_LabeledOption_Integer) isVlossomOptions_LabeledOption_Value() {}

func (*VlossomOptions_LabeledOption_Float) isVlossomOptions_LabeledOption_Value() {}

var file_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         11241,
		Name:          "protoc.gen.vlossom.file_options",
		Tag:           "bytes,11241,opt,name=file_options",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         11242,
		Name:          "protoc.gen.vlossom.field_options",
		Tag:           "bytes,11242,opt,name=field_options",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         11243,
		Name:          "protoc.gen.vlossom.message_options",
		Tag:           "bytes,11243,opt,name=message_options",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumOptions)(nil),
		Field:         11244,
		Name:          "protoc.gen.vlossom.enum_options",
		Tag:           "bytes,11244,opt,name=enum_options",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueOptions)(nil),
		Field:         11245,
		Name:          "protoc.gen.vlossom.enum_value_options",
		Tag:           "bytes,11245,opt,name=enum_value_options",
		Filename:      "options.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional protoc.gen.vlossom.FileOptions file_options = 11241;
	E_FileOptions = &file_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional protoc.gen.vlossom.FieldOptions field_options = 11242;
	E_FieldOptions = &file_options_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional protoc.gen.vlossom.MessageOptions message_options = 11243;
	E_MessageOptions = &file_options_proto_extTypes[2]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional protoc.gen.vlossom.EnumOptions enum_options = 11244;
	E_EnumOptions = &file_options_proto_extTypes[3]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional protoc.gen.vlossom.EnumValueOptions enum_value_options = 11245;
	E_EnumValueOptions = &file_options_proto_extTypes[4]
)

var File_options_proto protoreflect.FileDescriptor

var file_options_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73,
	0x73, 0x6f, 0x6d, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x73,
	0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x63, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x11,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65,
	0x78, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x22,
	0xd2, 0x06, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1b, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x02, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x65, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x02, 0x6c, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x6c, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e,
	0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x01, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x3b, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c,
	0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x4a, 0x0a,
	0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e,
	0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f,
	0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x01, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x48, 0x0a,
	0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e,
	0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0a, 0x6a, 0x73, 0x6f,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e,
	0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x52, 0x61, 0x64, 0x69,
	0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69,
	0x6f, 0x12, 0x42, 0x0a, 0x09, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65,
	0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x53,
	0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x08, 0x72, 0x61, 0x64,
	0x69, 0x6f, 0x53, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x09,
	0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x78,
	0x70, 0x6f, 0x73, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e,
	0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x22, 0x2b,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x7f, 0x0a, 0x12, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x68, 0x69, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x68, 0x69, 0x70, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x63, 0x6f, 0x70, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0xba, 0x02, 0x0a,
	0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f,
	0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x56, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2d, 0x61, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x2d, 0x63,
	0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6c,
	0x6f, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x63, 0x68, 0x69, 0x70, 0x73, 0x12, 0x29, 0x0a, 0x0d,
	0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x2d,
	0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x6e, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3c, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c,
	0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x56, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x4f, 0x0a, 0x0f, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x3b, 0x0a, 0x11, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x43, 0x0a, 0x0c, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0f, 0x52, 0x61, 0x64, 0x69,
	0x6f, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f,
	0x6d, 0x2e, 0x56, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x22, 0xf7, 0x02, 0x0a, 0x0e, 0x56, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73,
	0x73, 0x6f, 0x6d, 0x2e, 0x56, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x7c, 0x0a, 0x0d, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x07,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x45,
	0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x69, 0x0a, 0x10, 0x45, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x50, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x6e, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x69, 0x64, 0x6c, 0x65, 0x10, 0x05, 0x2a, 0xd1, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x10, 0x04, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x74, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x07,
	0x12, 0x12, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x65, 0x61,
	0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x10, 0x0b, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x10, 0x0c, 0x3a, 0x61, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe9, 0x57, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c,
	0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x65,
	0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea,
	0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67,
	0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x6d, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xeb, 0x57, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c,
	0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x61, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xec, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x76, 0x0a, 0x12, 0x65, 0x6e, 0x75, 0x6d, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xed, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x76, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x65,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x2b, 0x5a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x6c,
	0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_options_proto_rawDescOnce sync.Once
	file_options_proto_rawDescData = file_options_proto_rawDesc
)

func file_options_proto_rawDescGZIP() []byte {
	file_options_proto_rawDescOnce.Do(func() {
		file_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_proto_rawDescData)
	})
	return file_options_proto_rawDescData
}

var file_options_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_options_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_options_proto_goTypes = []interface{}{
	(State)(0),                            // 0: protoc.gen.vlossom.State
	(ComponentType)(0),                    // 1: protoc.gen.vlossom.ComponentType
	(InputOptions_Type)(0),                // 2: protoc.gen.vlossom.InputOptions.Type
	(*PluginOptions)(nil),                 // 3: protoc.gen.vlossom.PluginOptions
	(*FileOptions)(nil),                   // 4: protoc.gen.vlossom.FileOptions
	(*MessageOptions)(nil),                // 5: protoc.gen.vlossom.MessageOptions
	(*FieldOptions)(nil),                  // 6: protoc.gen.vlossom.FieldOptions
	(*InputOptions)(nil),                  // 7: protoc.gen.vlossom.InputOptions
	(*MultiStringOptions)(nil),            // 8: protoc.gen.vlossom.MultiStringOptions
	(*SelectOptions)(nil),                 // 9: protoc.gen.vlossom.SelectOptions
	(*CheckboxSetOptions)(nil),            // 10: protoc.gen.vlossom.CheckboxSetOptions
	(*TextAreaOptions)(nil),               // 11: protoc.gen.vlossom.TextAreaOptions
	(*JsonEditorOptions)(nil),             // 12: protoc.gen.vlossom.JsonEditorOptions
	(*RadioOptions)(nil),                  // 13: protoc.gen.vlossom.RadioOptions
	(*RadioSetOptions)(nil),               // 14: protoc.gen.vlossom.RadioSetOptions
	(*VlossomOptions)(nil),                // 15: protoc.gen.vlossom.VlossomOptions
	(*EnumOptions)(nil),                   // 16: protoc.gen.vlossom.EnumOptions
	(*EnumValueOptions)(nil),              // 17: protoc.gen.vlossom.EnumValueOptions
	(*VlossomOptions_LabeledOption)(nil),  // 18: protoc.gen.vlossom.VlossomOptions.LabeledOption
	(*descriptorpb.FileOptions)(nil),      // 19: google.protobuf.FileOptions
	(*descriptorpb.FieldOptions)(nil),     // 20: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil),   // 21: google.protobuf.MessageOptions
	(*descriptorpb.EnumOptions)(nil),      // 22: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 23: google.protobuf.EnumValueOptions
}
var file_options_proto_depIdxs = []int32{
	0,  // 0: protoc.gen.vlossom.FieldOptions.state:type_name -> protoc.gen.vlossom.State
	1,  // 1: protoc.gen.vlossom.FieldOptions.component:type_name -> protoc.gen.vlossom.ComponentType
	7,  // 2: protoc.gen.vlossom.FieldOptions.input:type_name -> protoc.gen.vlossom.InputOptions
	8,  // 3: protoc.gen.vlossom.FieldOptions.multi_string:type_name -> protoc.gen.vlossom.MultiStringOptions
	9,  // 4: protoc.gen.vlossom.FieldOptions.select:type_name -> protoc.gen.vlossom.SelectOptions
	10, // 5: protoc.gen.vlossom.FieldOptions.checkboxSet:type_name -> protoc.gen.vlossom.CheckboxSetOptions
	11, // 6: protoc.gen.vlossom.FieldOptions.text_area:type_name -> protoc.gen.vlossom.TextAreaOptions
	12, // 7: protoc.gen.vlossom.FieldOptions.json_editor:type_name -> protoc.gen.vlossom.JsonEditorOptions
	13, // 8: protoc.gen.vlossom.FieldOptions.radio:type_name -> protoc.gen.vlossom.RadioOptions
	14, // 9: protoc.gen.vlossom.FieldOptions.radio_set:type_name -> protoc.gen.vlossom.RadioSetOptions
	2,  // 10: protoc.gen.vlossom.InputOptions.type:type_name -> protoc.gen.vlossom.InputOptions.Type
	15, // 11: protoc.gen.vlossom.SelectOptions.options:type_name -> protoc.gen.vlossom.VlossomOptions
	15, // 12: protoc.gen.vlossom.CheckboxSetOptions.options:type_name -> protoc.gen.vlossom.VlossomOptions
	15, // 13: protoc.gen.vlossom.RadioSetOptions.options:type_name -> protoc.gen.vlossom.VlossomOptions
	18, // 14: protoc.gen.vlossom.VlossomOptions.labeled_options:type_name -> protoc.gen.vlossom.VlossomOptions.LabeledOption
	19, // 15: protoc.gen.vlossom.file_options:extendee -> google.protobuf.FileOptions
	20, // 16: protoc.gen.vlossom.field_options:extendee -> google.protobuf.FieldOptions
	21, // 17: protoc.gen.vlossom.message_options:extendee -> google.protobuf.MessageOptions
	22, // 18: protoc.gen.vlossom.enum_options:extendee -> google.protobuf.EnumOptions
	23, // 19: protoc.gen.vlossom.enum_value_options:extendee -> google.protobuf.EnumValueOptions
	4,  // 20: protoc.gen.vlossom.file_options:type_name -> protoc.gen.vlossom.FileOptions
	6,  // 21: protoc.gen.vlossom.field_options:type_name -> protoc.gen.vlossom.FieldOptions
	5,  // 22: protoc.gen.vlossom.message_options:type_name -> protoc.gen.vlossom.MessageOptions
	16, // 23: protoc.gen.vlossom.enum_options:type_name -> protoc.gen.vlossom.EnumOptions
	17, // 24: protoc.gen.vlossom.enum_value_options:type_name -> protoc.gen.vlossom.EnumValueOptions
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	20, // [20:25] is the sub-list for extension type_name
	15, // [15:20] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_options_proto_init() }
func file_options_proto_init() {
	if File_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiStringOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckboxSetOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextAreaOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonEditorOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioSetOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VlossomOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VlossomOptions_LabeledOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_options_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*FieldOptions_Rem)(nil),
		(*FieldOptions_Lg)(nil),
		(*FieldOptions_Input)(nil),
		(*FieldOptions_MultiString)(nil),
		(*FieldOptions_Select)(nil),
		(*FieldOptions_CheckboxSet)(nil),
		(*FieldOptions_TextArea)(nil),
		(*FieldOptions_JsonEditor)(nil),
		(*FieldOptions_Radio)(nil),
		(*FieldOptions_RadioSet)(nil),
	}
	file_options_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_options_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*EnumValueOptions_String_)(nil),
		(*EnumValueOptions_Integer)(nil),
		(*EnumValueOptions_Float)(nil),
	}
	file_options_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*VlossomOptions_LabeledOption_String_)(nil),
		(*VlossomOptions_LabeledOption_Integer)(nil),
		(*VlossomOptions_LabeledOption_Float)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_options_proto_goTypes,
		DependencyIndexes: file_options_proto_depIdxs,
		EnumInfos:         file_options_proto_enumTypes,
		MessageInfos:      file_options_proto_msgTypes,
		ExtensionInfos:    file_options_proto_extTypes,
	}.Build()
	File_options_proto = out.File
	file_options_proto_rawDesc = nil
	file_options_proto_goTypes = nil
	file_options_proto_depIdxs = nil
}
